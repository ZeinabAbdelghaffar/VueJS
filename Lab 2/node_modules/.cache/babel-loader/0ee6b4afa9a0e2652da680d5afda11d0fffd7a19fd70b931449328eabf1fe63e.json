{"ast":null,"code":"import ProductsOperations from '../../../public/Mixins/ProductsOperations';\nexport default {\n  data() {\n    return {\n      product: {},\n      id: '',\n      title: '',\n      price: 0,\n      qty: 0,\n      productId: 50\n    };\n  },\n  mixins: [ProductsOperations],\n  created() {\n    this.id = this.$route.params.id;\n    if (this.id) {\n      this.GetProductById(this.id).then(res => {\n        this.product = res;\n        this.title = res.title;\n        this.price = res.price;\n        this.qty = res.stock;\n      });\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      if (this.id) {\n        this.handleUpdateProduct();\n      } else {\n        this.handleAddProduct();\n      }\n    },\n    async handleAddProduct() {\n      try {\n        // Add the product\n        const response = await this.AddProduct(this.title, this.price, this.qty);\n        // Check if product is added successfully\n        if (response.status === 201) {\n          // Fetch products again after adding\n          await this.GetProducts();\n          console.log('Product added successfully!');\n        } else {\n          console.error('Failed to add product:', response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async handleUpdateProduct() {\n      this.product.title = this.title;\n      this.product.stock = this.qty;\n      this.product.price = this.price;\n      try {\n        await this.UpdateProduct(this.product.id, this.product);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductsOperations","data","product","id","title","price","qty","productId","mixins","created","$route","params","GetProductById","then","res","stock","methods","handleSubmit","handleUpdateProduct","handleAddProduct","response","AddProduct","status","GetProducts","console","log","error","UpdateProduct"],"sources":["C:\\Users\\Lenovo-\\Desktop\\zeinab\\VueJS\\day2\\src\\Components\\Pages\\ProductForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"form-title\">{{ this.id ? \"Update\" : \"Add\" }} Product</h2>\n    <form @submit.prevent=\"handleSubmit\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" v-model=\"title\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input type=\"number\" id=\"price\" v-model=\"price\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"qty\">Quantity</label>\n        <input type=\"number\" id=\"qty\" v-model=\"qty\" required />\n      </div>\n\n      <button type=\"submit\">{{ this.id ? \"Update\" : \"Add\" }}</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport ProductsOperations from '../../../public/Mixins/ProductsOperations';\n\nexport default {\n  data() {\n    return {\n      product: {},\n      id: '',\n      title: '',\n      price: 0,\n      qty: 0,\n      productId: 50,\n    };\n  },\n  mixins: [ProductsOperations],\n  created() {\n    this.id = this.$route.params.id;\n    if (this.id) {\n      this.GetProductById(this.id).then((res) => {\n        this.product = res;\n        this.title = res.title;\n        this.price = res.price;\n        this.qty = res.stock;\n      });\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      if (this.id) {\n        this.handleUpdateProduct();\n      } else {\n        this.handleAddProduct(); \n      }\n    },\n    async handleAddProduct() {\n      try {\n        // Add the product\n        const response = await this.AddProduct(this.title, this.price, this.qty);\n        // Check if product is added successfully\n        if (response.status === 201) {\n          // Fetch products again after adding\n          await this.GetProducts();\n          console.log('Product added successfully!');\n        } else {\n          console.error('Failed to add product:', response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async handleUpdateProduct() {\n      this.product.title = this.title;\n      this.product.stock = this.qty;\n      this.product.price = this.price;\n      try {\n        await this.UpdateProduct(this.product.id, this.product);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.form-title {\n  text-align: center;\n  margin-bottom: 20px;\n  font-size: 28px;\n  color: #333;\n  border-bottom: 2px solid #41b883; \n  padding-bottom: 10px; \n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 600;\n}\n\n.form-group input,\n.form-group select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  transition: border-color 0.3s;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  border-color: #41b883;\n  outline: none;\n}\n\nbutton {\n  padding: 10px 20px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  background-color: #41b883;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #35495e;\n}\n\n.buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.user-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.user-table th,\n.user-table td {\n  padding: 10px;\n  border: 1px solid #ddd;\n  text-align: left;\n}\n\n.user-table th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n\n.user-table button {\n  background-color: #41b883;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-right: 5px;\n}\n\n.user-table button:hover {\n  background-color: #35495e;\n}\n\n.user-table .delete-button {\n  background-color: #e74c3c;\n}\n\n.user-table .delete-button:hover {\n  background-color: #c0392b;\n}\n</style>"],"mappings":"AAyBA,OAAOA,kBAAiB,MAAO,2CAA2C;AAE1E,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MACXC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAE,CAAC;MACNC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,MAAM,EAAE,CAACR,kBAAkB,CAAC;EAC5BS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,EAAC,GAAI,IAAI,CAACO,MAAM,CAACC,MAAM,CAACR,EAAE;IAC/B,IAAI,IAAI,CAACA,EAAE,EAAE;MACX,IAAI,CAACS,cAAc,CAAC,IAAI,CAACT,EAAE,CAAC,CAACU,IAAI,CAAEC,GAAG,IAAK;QACzC,IAAI,CAACZ,OAAM,GAAIY,GAAG;QAClB,IAAI,CAACV,KAAI,GAAIU,GAAG,CAACV,KAAK;QACtB,IAAI,CAACC,KAAI,GAAIS,GAAG,CAACT,KAAK;QACtB,IAAI,CAACC,GAAE,GAAIQ,GAAG,CAACC,KAAK;MACtB,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACd,EAAE,EAAE;QACX,IAAI,CAACe,mBAAmB,CAAC,CAAC;MAC5B,OAAO;QACL,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACzB;IACF,CAAC;IACD,MAAMA,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,UAAU,CAAC,IAAI,CAACjB,KAAK,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,GAAG,CAAC;QACxE;QACA,IAAIc,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;UACxBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC5C,OAAO;UACLD,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEN,QAAQ,CAACnB,IAAI,CAAC;QACxD;MACF,EAAE,OAAOyB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAMR,mBAAmBA,CAAA,EAAG;MAC1B,IAAI,CAAChB,OAAO,CAACE,KAAI,GAAI,IAAI,CAACA,KAAK;MAC/B,IAAI,CAACF,OAAO,CAACa,KAAI,GAAI,IAAI,CAACT,GAAG;MAC7B,IAAI,CAACJ,OAAO,CAACG,KAAI,GAAI,IAAI,CAACA,KAAK;MAC/B,IAAI;QACF,MAAM,IAAI,CAACsB,aAAa,CAAC,IAAI,CAACzB,OAAO,CAACC,EAAE,EAAE,IAAI,CAACD,OAAO,CAAC;MACzD,EAAE,OAAOwB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}